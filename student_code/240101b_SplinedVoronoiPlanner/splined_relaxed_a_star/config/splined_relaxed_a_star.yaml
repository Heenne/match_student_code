planners:
  - name: 'SplinedRelaxedAStar'
    type: 'path_planner/SplinedRelaxedAStar'


SplinedRelaxedAStar:
  formation_path_planner:
    # This planner is used to create the initial path from where all robots have to offset their own path
    SplinedRelaxedAStar:
      # The default tolerance that is used if the tolerance of the received goal is not valid.
      # Default: 0.2
      default_tolerance: 0.2
      # How many of the neighbor cells should be used. Options:
      # 4 - This means the cells in the north, south, west, east direction are used
      # 8 - This means all cells around (also the diagonal ones) are used
      # Default: 8
      neighbor_type: 8
      # Threshold for the costmap values that define if a cell is free or not.
      # This image: http://wiki.ros.org/costmap_2d?action=AttachFile&do=get&target=costmapspec.png explains the cell cost values.
      # Value 0 means the farthest away from the wall. Value 254 defines a cell where an obstacle is located.
      # The greater this value will be defined the closer the global path will be planed next to walls.
      # Default: 0
      free_cell_threshold: 200
      # Distance that is added from the start point of the Relaxed A Star in the direction of the start orientation.
      # This should help no creating splines that instantly make a curve
      start_straight_distance: 0.01
      # Distance that is subtracted from the end point of the Relaxed A Star in the direction of the end orientation.
      # This should help no creating splines that instantly make a curve before the end
      end_straight_distance: 0.01
      
      # Every nth cell the cell of the RelaxedAStar planner will be used to generate splines
      # Every nth cell will act as a control point
      # control_point_distance: 80

      # This value defines how many points should be inserted into the plan from one spline.
      # F.e. control_point_distance = 50. With 0.05m per cell the control points are spaced every 2.5m.
      # With a planning_points_per_spline value of 20 this would generate 30 points into the plan that are in between two control points.
      # So roughly every 0.125m
      planning_points_per_spline: 100
      # Minimal radius of a curve the formation can drive in m.
      # This value will also be checked when the formation shape is known and the minimal radius of a curve will be calculated.
      # Whichever radius is bigger will be selected for creating the splines
      minimal_curve_radius: 0.1
      # This is the max step the iterator makes to approximate the length of the spline
      max_iterator_step_size: 0.001
      # Maximal difference between the target spline length and the approximated spline length.
      # When the difference is lower that this value a new point is added to the spline as the points are almost equal enough away from each other
      max_diff_to_target_length: 0.01
      # Distance the points should be appart from each other
      # The distance is measured as the spline length
      target_spline_length: 0.05

  formation_config:
    robot_names: ["/mir1", "/mir2"]
    mir1:
      namespace: /mir1
      rel_x_offset: 0.0
      rel_y_offset: 1.0
      rel_yaw_offset: 0.0
    mir2:
      namespace: /mir2
      rel_x_offset: 0.0
      rel_y_offset: -1.0
      rel_yaw_offset: 0.0